---
layout: post
title:  "REST - Chapter 4. Designing the Web Architecture: Problems and Insights"
date:   2017-11-24 21:13:00 +0500
categories: papers
---

By Roy Thomas Fielding. 2000

## Chapter 4. Designing the Web Architecture: Problems and Insights
Web’s major goal was to be a shared information space through which people and machines could communicate.

### 4.1 WWW Application Domain Requirements
What was needed was a way for people to store and structure their own information, whether permanent or ephemeral in nature, such that it could be usable by themselves and others, and to be able to reference and structure the information stored by others so that it would not be necessary for everyone to keep and maintain local copies.

### 4.1.1 Low Entry-barrier
Since participation in the creation and structuring of information was voluntary, a low entry-barrier was necessary to enable sufficient adoption

### 4.1.2 Extensibility
While simplicity makes it possible to deploy an initial implementation of a distributed system, extensibility allows us to avoid getting stuck forever with the limitations of what was deployed.

### 4.1.3 Distributed Hypermedia
Hypermedia is defined by the presence of application control information embedded within, or as a layer above, the presentation of information.  By its nature, user actions within a distributed hypermedia system require the transfer of large amounts of data from where the data is stored to where it is used

The usability of hypermedia interaction is highly sensitive to user-perceived latency: the time between selecting a link and the rendering of a usable result.

Since the Web’s information sources are distributed across the global Internet, the architecture needs to minimize network interactions (round-trips within the data transfer protocols)

### 4.1.4 Internet-scale
The Internet is about interconnecting information networks across multiple organizational boundaries.

### 4.1.4.1 Anarchic Scalability
Anarchic scalability refers to the need for architectural elements to continue operating when they are subjected to an unanticipated load, or when given malformed or maliciously constructed data, since they may be communicating with elements outside their organizational control.

The anarchic scalability requirement applies to all architectural elements. Clients cannot be expected to maintain knowledge of all servers. Servers cannot be expected to retain knowledge of state across requests.

### Flash Crowds
Particularly newsworthy information can also lead to “flash crowds”: sudden spikes in access attempts as news of its availability spreads across the world

### Security
Multiple organizational boundaries implies that multiple trust boundaries could be present in any communication.  The participants in an application interaction should either assume that any information received is untrusted, or require some additional authentication before trust can be given.

### 4.1.4.2 Independent Deployment
The system must be prepared for gradual and fragmented change

### 4.2 Problem
How do we introduce a new set of functionality to an architecture that is already widely deployed, and how do we ensure that its introduction does not adversely impact, or even destroy, the architectural properties that have enabled the Web to succeed?

### 4.3 Approach
The early Web architecture was based on solid principles -separation of concerns, simplicity, and generality- but lacked an architectural description and rationale.

### Hypothesis I
The design rationale behind the WWW architecture can be described by an architectural style consisting of the set of constraints
applied to the elements within the Web architecture.

### Hypothesis II
Constraints can be added to the WWW architectural style to derive a new hybrid style that better reflects the desired properties of a modern Web architecture.

### Hypothesis III
Proposals to modify the Web architecture can be compared to the updated WWW architectural style and analyzed for conflicts prior to deployment.

### Sumary
REST provides a set of architectural constraints that, when applied as a whole, emphasizes: 

|Scalability of component interactions
|Generality of interfaces
|Independent deployment of components and intermediary components to reduce interaction latency
|Enforce security
|Encapsulate legacy systems

#### Source
[Architectural Styles and the Design of Network-based Software Architectures][rest]

[rest]: http://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm